 .PROC CHKSYNCH,1 ;     P070003,1 ; 1 PARAMETER
;
;
;            ; CALL:  CHKSYNCH( VAR RESULT);
;            ;          RESULT IS AN INTEGER THAT GETS THE RESULT.
;            ;
;            ; PURPOSE:  COPY PROTECTION BY CHECKING SYNCHRONIZATION 
;            ;           BETWEEN TRACKS.
;            ;
;            ; 1. READ SECTOR 0 ADDRESS FIELD PROLOGUE ON CURRENT TRACK.
;            ; 2. MOVE DISK ARM TO NEXT HIGHER NUMBERED TRACK.
;            ; 3. COUNT NUMBER OF NIBBLES UNTIL SECTOR 0
;            ;      ADDRESS FIELD PROLOGUE ON THIS TRACK IS READ.
;            ; 4. RETURN COUNT.
;            ;
;            ; SEE ALSO SCENARIO.DATA.  SIMILAR COPY PROTECTION CODE
;            ; RESIDES THERE TOO, AND IS USED IN WIZARDRY.CODE.
;
 PLA         ; PULL RETURN
 STA 00
 PLA
 STA 01
;
 PLA         ; 02.03 := POINTER TO RESULT (TRACK SYNCH VALUE)
 STA 02
 PLA
 STA 03
;
 LDA 01      ; PUSH RETURN
 PHA
 LDA 00
 PHA
;
 LDA #0      ; INIT SYNCH COUNT VALUE
 STA 0D      ; 0D.0E
 STA 0E      ;
;
 LDX #060     ; SLOT# * 16   (SLOT 6)
 LDA 0C08A,X  ; DRIVE #1
 LDA 0C089,X  ; MOTOR ON
 LDA 0C08E,X  ; PREPARE LATCH FOR INPUT
;
L5313
 LDA 0C08C,X  ; READ A BYTE
 BPL L5313
 CMP #0FF     ;   #$FF
 BNE L5313
L531C
 LDA 0C08C,X  ; READ A BYTE
 BPL L531C
 CMP #0FF     ;   #$FF
 BNE L5313
L0035
 LDA 0C08C,X  ; READ A BYTE
 BPL L0035
 CMP #0FF     ;   #$FF
 BNE L5331
 JMP L0035
;
L5331
 LDA 0C08C,X  ; READ A BYTE
 BPL L5331
 CMP#0D5      ;   #$D5
 BNE L5331
L533A
 LDA 0C08C,X  ; READ
 BPL L533A
 CMP #0AA     ;   #$AA
 BNE L5331
L5343
 LDA 0C08C,X  ; READ
 BPL L5343
 CMP #096     ;   #$96
 BNE L5331
;
;             ; WE HAVE JUST READ AN ADDRESS FIELD PROLOGUE (D5 AA 96)
;
L534C
 LDA 0C08C,X  ; READ
 BPL L534C
 NOP          ;   VOLUME (IGNORED)
 NOP
 NOP
 NOP
 NOP
L5356
 LDA 0C08C,X  ; READ
 BPL L5356
 NOP          ;   VOLUME (IGNORED)
 NOP
 NOP
 NOP
 NOP
L5360
 LDA 0C08C,X  ; READ
 BPL L5360
 NOP          ;   TRACK (IGNORED)
 NOP
 NOP
 NOP
 NOP
L536A
 LDA 0C08C,X  ; READ
 BPL L536A
 NOP          ;   TRACK (IGNORED)
 NOP
 NOP
 NOP
 NOP
L5374
 LDA 0C08C,X  ; READ
 BPL L5374
 TAY          ;   SECTOR
 NOP
 NOP
 NOP
 NOP
 NOP
L537F
 LDA 0C08C,X  ; READ
 BPL L537F
 STA 04       ;   SECTOR
 TYA
 SEC
 ROL A
 AND 04       ; A = SECTOR VALUE
 CMP #00      ; SECTOR 0?
 BNE L5313    ; NO, L5313.  TRY UNTIL WE GET SECTOR 0
;
;             ; WE HAVE JUST READ SECTOR 0 ADDRESS FIELD
;
 JSR L011B    ; MOVETRACK.  MOVE DISK ARM INWARD TO NEXT HIGHER NUMBERED TRACK
;
L00A2
L5392
 LDA 0C08C,X  ; READ
 BPL L5392
 CMP #0D5     ; #$D5?
 BEQ L53A4    ;   YES, L53A4
              ;   NO
 INC 0D       ; 0D.0E COUNT MOST NIBBLES UNTIL WE READ SECTOR 0 PROLOGUE
 BNE L5392    ;
 INC 0E       ; 0D IS LOW ORDER, 0E IS HIGH ORDER
 JMP L00A2
L53A4
 LDA 0C08C,X  ; READ
 BPL L53A4
 CMP #0AA     ;   #$AA
 BNE L5392
L53AD
 LDA 0C08C,X  ; READ
 BPL L53AD
 CMP #096     ;   #$96
 BNE L5392
L53B6
 LDA 0C08C,X  ; READ
 BPL L53B6
 NOP          ;   VOL
 NOP
 NOP
 NOP
 NOP
L53C0
 LDA 0C08C,X  ; READ
 BPL L53C0
 NOP          ;   VOL
 NOP
 NOP
 NOP
 NOP
L53CA
 LDA 0C08C,X  ; READ
 BPL L53CA
 NOP          ;   TRACK
 NOP
 NOP
 NOP
 NOP
L53D4
 LDA 0C08C,X  ; READ
 BPL L53D4
 NOP          ;   TRACK
 NOP
 NOP
 NOP
 NOP
L53DE
 LDA 0C08C,X  ; READ
 BPL L53DE
 TAY          ;   SECTOR
 NOP
 NOP
 NOP
 NOP
 NOP
L53E9
 LDA 0C08C,X  ; READ
 BPL L53E9
 STA 04       ;   SECTOR
 TYA
 SEC
 ROL A
 AND 04       ; SECTOR
 CMP #0       ; 0?
 BEQ L53FC    ;   YES, L53FC
 JMP L00A2    ;   NO,  L00A2 AND TRY AGAIN
;
L53FC
 LDY #0       ; ALL DONE
 LDA 0D       ; STORE RESULTS AT PASSED POINTER
 STA @02,Y    ; 0D.0E IS COUNT OF NIBBLES BEFORE SECTOR 0 WAS
 INY          ;   READ ON ADJACENT TRACK.
 LDA 0E
 STA @02,Y
 LDA 0C088,X  ; MOTOR OFF
 RTS
; ----------------------------------------------------------------------------
;
L011B
;              NAME:  L011B   (SIMILAR TO SEEKABS)
;           PURPOSE:  MOVE DISK ARM TO NEXT HIGHER NUMBERED TRACK
;              CALL:  LDX #$60;    SLOT# * 16
;                     JSR $L011B
;
;
 STX 06    ; 06 := SLOT# * 16
 LDY #0C   ; DESIRED TRACK #$0C       (ASSUMED VALUE; NOT ALWAYS TRUE)
 STY 07    ; 07 := DESIRED TRACK
 DEY       ; CALCULATE CURRENT TRACK
 DEY       ; THESE ARE 1/2 TRACK INCREMENTS
 STY 08    ; 08 := CURRENT TRACK #$0A (ASSUMED VALUE; NOT ALWAYS TRUE)
;
 LDA #0EF  ; INITIAL DELAY TIME SET TO $D8EF
 STA 0B
 LDA #0D8
 STA 0C
;
 LDA #0    ; 09 := #0   1/2 TRACKS MOVED COUNT
 STA 09
;
;          ; THE REST OF THIS CODE IS NEARLY IDENTICAL TO THE DOS CODE
;          ; FOR SEEKABS.  THE ONLY DIFFERENCE IS IN THE LOCATION
;          ; OF THE VARIOUS "VARIABLES".
;          ;
;          ;   07 =    DESIRED TRACK
;          ;   08 =    CURRENT TRACK
;          ;   09 =    1/2 TRACKS MOVED
;          ;   0A =    PRIOR 1/2 TRACK
;          ;   0B.0C = DELAY TIME
L5421
 LDA 08    ; CURRENT TRACK - DESIRED TRACK = ...
 STA 0A    ; SAVE PRIOR 1/2 TRACK BEFORE MOVE
 SEC       ;
 SBC 07    ; ...DISTANCE AWAY AND DIRECTION TO MOVE
 BEQ L545B ; SAME TRACK?  YES,
 BCS L5432 ; MOVE INWARD OR OUTWARD?
 EOR #0FF  ; INWARD (TO A BIGGER #)     ADD +1
 INC 08    ; CURRENT TRACK AFTER ARM MOVES
 BCC L5436
L5432
 ADC #0FE  ; OUTWARD (TO A SMALLER #)   ADD -1
 DEC 08    ; CURRENT TRACK AFTER ARM MOVES
           ;   A = # OF 1/2 TRACKS STILL TO MOVE
L5436
 CMP 09
 BCC L543C
 LDA 09
L543C
 CMP #0C
 BCS L5441
 TAY
L5441
 SEC         ; C=1
 JSR L016F   ; TURN PHASE ON (CURRENT TRACK)
 LDA L0191,Y
 JSR L0180   ; MSWAIT
 LDA 0A
 CLC         ; C=0
 JSR L0171
 LDA L019D,Y
 JSR L0180   ; MSWAIT
 INC 09
 BNE L5421
;
L545B
 JSR L0180   ; MSWAIT
 CLC
L016F
 LDA 08
L0171
 AND #03
 ROL A
 ORA 06
 TAX
 LDA 0C080,X  ; STEPPER MOTOR PHASES
 LDX 06
 RTS
;
 TAX
 LDY #0A0
;
L0180
L5470
;
;             ; ARM MOVE DELAY
;
 LDX #011
L5472
 DEX
 BNE L5472
 INC 0B
 BNE L547B
 INC 0C
L547B
 SEC
 SBC #01
 BNE L5470
 RTS
;
;              ; ARM MOVE DELAY TABLE
;
;              ;  DOS HAS 01 30 28 24 20 1E
;              ;                   --
;              ;
; ONTABLE
L0191 .BYTE 001,030,028,020,020,01E,01D,01C,01C,01C,01C,01C
;
; OFFTABLE
L019D .BYTE 070,02C,026,022,01F,01E,01D,01C,01C,01C,01C,01C
 .BYTE 000
 .END

